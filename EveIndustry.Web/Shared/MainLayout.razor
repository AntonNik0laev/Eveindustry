@using EveIndustry.Web.Bits.Sidenav
@using EveIndustry.Web.Bits
@using EveIndustry.Web.Services
@using Eveindustry.Shared.DTO.EveTypeSearch
@inherits LayoutComponentBase


@inject IEveItemSearchService EveItemSearchService
<div class="header">

    <div class="e-search-container">
        <input placeholder="Search across Blueprint database" @onkeyup="async (t) => await OnSearchChanged(t)" Class="e-autocomplete" @bind-value="TextboxVal" @bind-value:event="oninput"/>
        <div class="e-search-results-container">
            @foreach (var item in @SearchItems)
            {
                <a href="/type/@item.Id" class="e-search-item-container">
                    <img src="https://images.evetech.net/types/@item.Id/icon" height="100%">
                    <div class="e-search-item-name">
                        <span>@item.Name</span>
                    </div>
                    <div class="e-search-item-category">
                        <span >@item.Category / @item.Group</span>
                    </div>
                </a>
            }
        </div>
    </div>
</div>
<div class="page">
    @Body
</div>


@code
{
    IList<EveTypeSearchInfo> SearchItems = new List<EveTypeSearchInfo>()
    {
    };
    
    public string TextboxVal { get; set; } = String.Empty;

    private async Task OnSearchChanged(KeyboardEventArgs change)
    {
        var newText = TextboxVal;
        Console.WriteLine($"VALUE: {TextboxVal}");
        if (string.IsNullOrEmpty(newText))
        {
            SearchItems.Clear();
            return;
        }
        Console.WriteLine($"On search changed: {newText}");
        var result = await EveItemSearchService.Search(newText);
        this.SearchItems = result;
    }
}